/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/memberships": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all memberships */
        get: operations["MembershipsController_findAll"];
        put?: never;
        /** Create new membership */
        post: operations["MembershipsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/memberships/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update membership */
        patch: operations["MembershipsController_updateMembership"];
        trace?: never;
    };
    "/api/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get info about all members */
        get: operations["MembersController_findAll"];
        put?: never;
        /** Create new member */
        post: operations["MembersController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/members/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get full info about member */
        get: operations["MembersController_findById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update member */
        patch: operations["MembersController_update"];
        trace?: never;
    };
    "/api/members/{id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Freeze/unfreeze member */
        patch: operations["MembersController_freeze"];
        trace?: never;
    };
    "/api/members/{id}/telegram": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Telegram metadata for member */
        delete: operations["MembersController_deleteTelegramMetadata"];
        options?: never;
        head?: never;
        /** Add/update Telegram metadata for member */
        patch: operations["MembersController_updateTelegramMetadata"];
        trace?: never;
    };
    "/api/members/{id}/github": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete GitHub metadata for member */
        delete: operations["MembersController_deleteGitHubMetadata"];
        options?: never;
        head?: never;
        /** Add/update GitHub metadata for member */
        patch: operations["MembersController_updateGitHubMetadata"];
        trace?: never;
    };
    "/api/acs-keys/member/{memberId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get ACS keys for specific member */
        get: operations["ACSKeysController_findAllByMemberId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/acs-keys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create ACS key */
        post: operations["ACSKeysController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/acs-keys/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete ACS key */
        delete: operations["ACSKeysController_remove"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/member-transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all member transactions */
        get: operations["MemberTransactionsController_findAll"];
        put?: never;
        /** Create new member transaction */
        post: operations["MemberTransactionsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/member-transactions/subject/{memberId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all member transactions for subject member */
        get: operations["MemberTransactionsController_findAllBySubjectMember"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/member-transactions/actor/{memberId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all member transactions for actor member */
        get: operations["MemberTransactionsController_findAllByActorMember"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/space-transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all space transactions */
        get: operations["SpaceTransactionsController_findAll"];
        put?: never;
        /** Create new space transaction */
        post: operations["SpaceTransactionsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/space-transactions/actor/{memberId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all space transactions */
        get: operations["SpaceTransactionsController_findAllByActor"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/membership-subscriptions/member/{memberId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all membership subscriptions for member */
        get: operations["MembershipSubscriptionsController_findAllByMemberId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/membership-subscriptions/membership/{membershipId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all membership subscriptions for membership */
        get: operations["MembershipSubscriptionsController_findAllByMembershipId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/membership-subscriptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Subscribe member to membership */
        post: operations["MembershipSubscriptionsController_subscribe"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/membership-subscriptions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Unsubscribe member from membership */
        delete: operations["MembershipSubscriptionsController_unsubscribe"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/self": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get self member auth info */
        get: operations["AuthController_getSelf"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        MembershipDTO: {
            /** Format: uuid */
            id: string;
            title: string;
            amount: string;
            active: boolean;
        };
        ErrorApiResponse: {
            statusCode: number;
            message: string;
        };
        CreateUpdateMembershipDTO: {
            title: string;
            amount: string;
            active: boolean;
        };
        TelegramMetadataDTO: {
            telegramId: string;
            telegramName: string;
        };
        GitHubMetadataDTO: {
            githubId: string;
            githubUsername: string;
        };
        MemberDTO: {
            /** Format: uuid */
            id: string;
            name: string;
            /** Format: email */
            email: string;
            /** @enum {string} */
            status: "active" | "frozen";
            balance: string;
            /** Format: date-time */
            joinedAt: string;
            telegramMetadata?: components["schemas"]["TelegramMetadataDTO"];
            githubMetadata?: components["schemas"]["GitHubMetadataDTO"];
        };
        CreateUpdateMemberDTO: {
            name: string;
            /** Format: email */
            email: string;
        };
        UpdateStatusDTO: {
            /** @enum {string} */
            status: "active" | "frozen";
        };
        UpdateTelegramMetadataDTO: {
            telegramId: string;
        };
        UpdateGitHubMetadataDTO: {
            githubUsername: string;
        };
        ACSKeyDTO: {
            /** Format: uuid */
            id: string;
            /** Format: uuid */
            memberId: string;
            /** @enum {string} */
            type: "pan" | "uid";
            key: string;
            name: string;
        };
        CreateACSKeyDTO: {
            /** @enum {string} */
            type: "pan" | "uid";
            key: string;
            name: string;
            /** Format: uuid */
            memberId: string;
        };
        MemberTransactionDTO: {
            /** Format: uuid */
            id: string;
            /** @enum {string} */
            type: "deposit" | "withdrawal";
            amount: string;
            comment?: string;
            /** Format: date-time */
            date: string;
            /** @enum {string} */
            source?: "magic" | "donate" | "topup";
            /** @enum {string} */
            target?: "magic" | "membership";
            /** Format: uuid */
            actorId: string;
            /** Format: uuid */
            subjectId: string;
            /** Format: date-time */
            createdAt: string;
        };
        CreateMemberTransactionDTO: {
            /** @enum {string} */
            type: "deposit" | "withdrawal";
            amount: string;
            comment?: string;
            /** Format: date-time */
            date: string;
            /** @enum {string} */
            source?: "magic" | "donate" | "topup";
            /** @enum {string} */
            target?: "magic" | "membership";
            /** Format: uuid */
            subjectId: string;
        };
        SpaceTransactionDTO: {
            /** Format: uuid */
            id: string;
            /** @enum {string} */
            type: "deposit" | "withdrawal";
            amount: string;
            comment?: string;
            /** Format: date-time */
            date: string;
            /** @enum {string} */
            source?: "magic" | "donate" | "topup";
            /** @enum {string} */
            target?: "magic" | "basic" | "purchases";
            /** Format: uuid */
            actorId: string;
            /** Format: date-time */
            createdAt: string;
        };
        CreateSpaceTransactionDTO: {
            /** @enum {string} */
            type: "deposit" | "withdrawal";
            amount: string;
            comment?: string;
            /** Format: date-time */
            date: string;
            /** @enum {string} */
            source?: "magic" | "donate" | "topup";
            /** @enum {string} */
            target?: "magic" | "basic" | "purchases";
        };
        MembershipSubscriptionDTO: {
            /** Format: uuid */
            id: string;
            /** Format: uuid */
            memberId: string;
            /** Format: uuid */
            membershipId: string;
            /** Format: date-time */
            subscribedAt: string;
            /** Format: date-time */
            declinedAt?: string;
        };
        SubscribeDTO: {
            /** Format: uuid */
            memberId: string;
            /** Format: uuid */
            membershipId: string;
        };
        SelfAuthInfoDTO: {
            /** Format: uuid */
            id: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    MembershipsController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MembershipDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembershipsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUpdateMembershipDTO"];
            };
        };
        responses: {
            /** @description Successfull response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MembershipDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembershipsController_updateMembership: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUpdateMembershipDTO"];
            };
        };
        responses: {
            /** @description Successfull response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MembershipDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUpdateMemberDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_findById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUpdateMemberDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_freeze: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateStatusDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_deleteTelegramMetadata: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_updateTelegramMetadata: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateTelegramMetadataDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_deleteGitHubMetadata: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembersController_updateGitHubMetadata: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateGitHubMetadataDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ACSKeysController_findAllByMemberId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                memberId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ACSKeyDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ACSKeysController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateACSKeyDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ACSKeyDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    ACSKeysController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MemberTransactionsController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberTransactionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MemberTransactionsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateMemberTransactionDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberTransactionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MemberTransactionsController_findAllBySubjectMember: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                memberId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberTransactionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MemberTransactionsController_findAllByActorMember: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                memberId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberTransactionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    SpaceTransactionsController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpaceTransactionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    SpaceTransactionsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateSpaceTransactionDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpaceTransactionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    SpaceTransactionsController_findAllByActor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                memberId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SpaceTransactionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembershipSubscriptionsController_findAllByMemberId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                memberId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MembershipSubscriptionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembershipSubscriptionsController_findAllByMembershipId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                membershipId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MembershipSubscriptionDTO"][];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembershipSubscriptionsController_subscribe: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubscribeDTO"];
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MembershipSubscriptionDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    MembershipSubscriptionsController_unsubscribe: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
    AuthController_getSelf: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SelfAuthInfoDTO"];
                };
            };
            /** @description Erroneous response */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorApiResponse"];
                };
            };
        };
    };
}
